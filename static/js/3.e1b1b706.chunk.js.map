{"version":3,"sources":["assents/image/user.png","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Components/Profile/MyPost/MyPost.module.scss","Components/Profile/ProfileInfo/ProfileInfo.module.scss","Components/Profile/MyPost/Post/Post.module.scss","Components/Profile/Profile.module.scss","Components/Profile/MyPost/MyPostTextareaForm.tsx","Components/Profile/MyPost/Post/Post.tsx","Components/Profile/MyPost/MyPost.tsx","Components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","Components/Profile/ProfileInfo/ProfileInfo.tsx","Components/Profile/Profile.tsx","Components/Profile/ProfileContainer.tsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","maxLength30","maxLengthCreator","TextareaReduxForm","reduxForm","form","props","onSubmit","handleSubmit","className","s","Field","placeholder","name","component","Textarea","validate","required","Post","post","src","userPhoto","massage","like","MyPost","React","memo","postElements","map","p","message","numberLike","id","mypost","mypostContainer","ava","newPost","addPost","myPosts","ProfileStatusWithHooks","useState","status","setStatus","editMode","setEditMode","useEffect","profileStatus","statusInput","autoFocus","onChange","e","currentTarget","onBlur","updateStatus","statusText","onDoubleClick","ProfileInfo","profile","PrfileInfo","PrfileInfoImg","photos","large","discriptionInfo","Preloader","Profile","profileContainer","newPostChange","ProfileContainer","userID","this","match","params","String","getUserProfile","getStatus","Component","compose","withAuthRedirect","connect","state","postPage","postData","auth","setUsersProfile","withRouter"],"mappings":"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","file":"static/js/3.e1b1b706.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/user.17df8b8c.png\";","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mypost\":\"MyPost_mypost__3sDTz\",\"mypostContainer\":\"MyPost_mypostContainer__2-bdk\",\"ava\":\"MyPost_ava__3OT6u\",\"form\":\"MyPost_form__26x3X\",\"myPosts\":\"MyPost_myPosts__2lsYr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PrfileInfo\":\"ProfileInfo_PrfileInfo__3tEmj\",\"PrfileInfoImg\":\"ProfileInfo_PrfileInfoImg__10neJ\",\"ava\":\"ProfileInfo_ava__arQX6\",\"discriptionInfo\":\"ProfileInfo_discriptionInfo__ZtD8k\",\"name\":\"ProfileInfo_name__10GhZ\",\"profileStatus\":\"ProfileInfo_profileStatus__2A15U\",\"statusText\":\"ProfileInfo_statusText__1GbtM\",\"statusInput\":\"ProfileInfo_statusInput__2bsQm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3xkcK\",\"massage\":\"Post_massage__3-F9C\",\"like\":\"Post_like__zUo2a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__Raocc\",\"profileContainer\":\"Profile_profileContainer__3htoh\"};","import React from \"react\";\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validator\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\nimport s from './MyPost.module.scss';\n\nexport type TextareaPropsType = {\n    newPost: string\n}\n\nconst maxLength30 = maxLengthCreator(30)\n\nconst MyPostTextareaForm: React.FC<InjectedFormProps<TextareaPropsType>> = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit} className={s.form}>\n            <div>\n                <Field placeholder={'Add new post'} name={'newPost'} component={Textarea}\n                       validate={[required, maxLength30]}/>\n            </div>\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nexport const TextareaReduxForm = reduxForm<TextareaPropsType>({form: 'profileNewPostForm'})(MyPostTextareaForm)\n  ","import React from 'react';\nimport s from './Post.module.scss';\nimport userPhoto from \"../../../../assents/image/user.png\";\n\ntype Likes = {\n    like: number\n    massage: string\n}\n\nconst Post = (props: Likes) => {\n    return (\n        <div className={s.post}>\n            <div>\n                <img src={userPhoto}/>\n            </div>\n            <div className={s.massage}>\n                {props.massage}\n                <div className={s.like}>\n                    <span>â™¥</span>{props.like}\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Post;","import React from 'react';\nimport {postType} from '../../../types/types';\nimport s from './MyPost.module.scss';\nimport {TextareaPropsType, TextareaReduxForm} from './MyPostTextareaForm';\nimport Post from './Post/Post';\nimport userPhoto from \"../../../assents/image/user.png\";\n\ntype MyPostType = {\n    post: Array<postType>\n    newPostChange: (text: string) => void\n    addPost: (text: string) => void\n}\n\nconst MyPost = React.memo((props: MyPostType) => {\n    const postElements = props.post.map(p => <Post key={p.id} massage={p.message} like={p.numberLike}/>)\n    const onAddPost = ({newPost}: TextareaPropsType) => {\n        props.addPost(newPost)\n    }\n    return (\n        <div className={s.mypost}>\n            <div className={s.mypostContainer}>\n                <div>\n                    <img className={s.ava} src={userPhoto} />\n                </div>\n                <TextareaReduxForm onSubmit={onAddPost}/>\n            </div>\n            <div className={s.myPosts}>\n                <h3>My post</h3>\n                {postElements}\n            </div>\n        </div>\n\n    )\n})\n\nexport default MyPost;\n\n","import React, {ChangeEvent, useEffect, useState} from \"react\";\nimport s from './ProfileInfo.module.scss';\n\ntype ProfileStatusType = {\n    status: string\n    updateStatus: (status: string) => void\n}\n\ntype localStateType = {\n    editMode: boolean\n    status: string\n}\n\nconst ProfileStatusWithHooks = (props: ProfileStatusType) => {\n\n    const [status, setStatus] = useState<string>(props.status)\n\n    const [editMode, setEditMode] = useState<boolean>(false)\n\n    const activateEditMode = () => {\n        setEditMode(true)\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false)\n        props.updateStatus(status)\n    }\n\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\n        if (e.currentTarget.value) {\n            setStatus(e.currentTarget.value)\n        }\n    }\n    useEffect(() => {\n        setStatus(props.status)\n    }, [props.status])\n\n\n    return (\n        <div className={s.profileStatus}>\n            {!editMode\n                ?\n                <div className={s.statusText}>\n                    <span onDoubleClick={activateEditMode}>{props.status || '__________'}</span>\n                </div>\n                :\n                <div className={s.statusInput}>\n                    <input autoFocus onChange={onStatusChange} onBlur={deactivateEditMode} value={status}/>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default ProfileStatusWithHooks","import React from 'react';\nimport Preloader from '../../common/Preloader/Preloader';\nimport s from './ProfileInfo.module.scss';\nimport userPhoto from './../../../assents/image/user.png'\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\n\ntype ProfileInfoType = {\n    profile: any\n    status: string\n    updateStatus: (status: string) => void\n}\n\nconst ProfileInfo = ({profile, status, updateStatus}: ProfileInfoType) => {\n\n    if (!profile) {\n        return <Preloader/>\n    }\n    return (\n        <div className={s.PrfileInfo}>\n            <div className={s.PrfileInfoImg}>\n                <img className={s.ava} src={profile.photos.large || userPhoto}/>\n            </div>\n            <div className={s.discriptionInfo}>\n                <h5 className={s.name}>Vlad Klopot</h5>\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\n            </div>\n        </div>\n    )\n}\nexport default ProfileInfo;","import React from 'react';\nimport {postType} from '../../types/types';\nimport MyPost from './MyPost/MyPost';\nimport s from './Profile.module.scss';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\n\nexport type ProfileType = {\n    aboutMe: string\n    contacts: { facebook: string, website: string, vk: string, twitter: string, instagram: string }\n    fullName: string\n    lookingForAJob: boolean\n    lookingForAJobDescription: string\n    photos: { small: string, large: string }\n    userId: number\n}\n\ntype PostType = {\n    profile: ProfileType\n    post: Array<postType>\n    status: string\n    newPostChange: (text: string) => void\n    addPost: (text: string) => void\n    updateStatus: (status: string) => void\n}\n\nconst Profile = (props: PostType) => {\n\n    return (\n        <div className={s.profile}>\n            <div className={s.profileContainer}>\n                <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n                <MyPost\n                    post={props.post}\n                    newPostChange={props.newPostChange}\n                    addPost={props.addPost}\n                />\n            </div>\n        </div>\n    )\n}\nexport default Profile;","import {connect} from 'react-redux';\nimport React from \"react\"\nimport {AppStoreType} from '../../redux/redux-store';\nimport Profile, {ProfileType} from './Profile';\nimport {addPost, setUsersProfile, getUserProfile, getStatus, updateStatus} from '../../redux/profile-reducer';\nimport {postType} from \"../../types/types\";\nimport {RouteComponentProps, withRouter} from \"react-router\";\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\ntype PathParamsType = {\n    userID: string\n}\n\ntype MapStateToPropsType = {\n    profile: any\n    post: postType[]\n    status: string\n    userID: number | null\n}\n\ntype MapDispachToPropsType = {\n    addPost: (text: string) => void\n    newPostChange: (text: string) => void\n    setUsersProfile: (profile: ProfileType) => void\n    getUserProfile: (userId: string) => void\n    getStatus: (status: string) => void\n    updateStatus: (status: string) => void\n}\n\ntype ProfileContainerType = MapStateToPropsType & MapDispachToPropsType\ntype PropsType = RouteComponentProps<PathParamsType> & ProfileContainerType\n\nclass ProfileContainer extends React.Component<PropsType> {\n    componentDidMount() {\n        let userID = this.props.match.params.userID\n        if (!userID) {\n            userID = String(this.props.userID)\n        }\n        this.props.getUserProfile(userID)\n        this.props.getStatus(userID)\n    }\n\n    render() {\n        return (\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status}\n                     updateStatus={this.props.updateStatus}/>\n        )\n    }\n}\n\nconst mapStateToProps = (state: AppStoreType): MapStateToPropsType => {\n    return {\n        profile: state.postPage.profile,\n        status: state.postPage.status,\n        post: state.postPage.postData,\n        userID: state.auth.id,\n    }\n}\n\nexport default compose<React.ComponentType>(\n    withAuthRedirect,\n    connect(mapStateToProps, {addPost, setUsersProfile, getUserProfile, getStatus, updateStatus}),\n    withRouter,\n)\n(ProfileContainer)"],"sourceRoot":""}