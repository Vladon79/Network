{"version":3,"sources":["redux/dialogs-reduser.ts","redux/profile-reducer.ts","utils/helper/objects-helpers.ts","redux/users-reducer.ts","Components/Login/LoginPage.module.scss","api/api.ts","redux/auth-reduser.ts","assents/image/logo.svg","Components/Header/Header.tsx","Components/Header/HeaderContainer.tsx","Components/Login/LoginForm/LoginForm.tsx","Components/Login/LoginPage.tsx","Components/Music/Music.tsx","Components/common/NavlinkForPage/NavlinkForPage.tsx","Components/Navbar/Navbar.tsx","Components/News/News.tsx","Components/Setting/Setting.tsx","redux/app-reducer.ts","hoc/withSuspense.tsx","App.tsx","reportWebVitals.ts","redux/redux-store.ts","index.tsx","Components/Login/LoginForm/LoginForm.module.scss","utils/validators/validator.ts","Components/common/FormsControls/FormsControls.module.scss","Components/common/FormsControls/FormsControls.tsx","assents/image/preloader.svg","Components/common/Preloader/Preloader.tsx","Components/Header/Header.module.scss","Components/Navbar/Navbar.module.scss","Components/common/NavlinkForPage/NavlinkForPage.module.scss","Components/common/Preloader/Preloader.module.css","hoc/withAuthRedirect.tsx"],"names":["InitialState","masseges","id","message","myMessage","dialogs","name","ava","dialogsReduser","state","action","type","sendMessageData","sendMessage","newMessage","SendMessageAC","postData","numberLike","profile","status","profileReducer","newPostAddData","newPostAdd","filter","p","photos","photo","addPost","setUsersProfile","setStatus","savePhotoSuccess","getUserProfile","userID","dispatch","a","usersAPI","getProfile","data","getStatus","profileAPI","response","updateStatus","resultCode","savePhoto","saveProfile","getState","auth","messages","length","stopSubmit","_error","Promise","reject","updateObjectInArray","items","itemId","objPropName","newObjProps","map","f","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","usersID","followed","user","followSuccess","unFollowSuccess","setCurrentPage","toggleIsFetching","toggleIsFollowingProgess","requestUsers","getUsers","totalCount","followUnfollowFlow","apiMethod","actionCreate","follow","followToUser","bind","unFollow","unFollowToUser","module","exports","instance","axios","create","withCredentials","baseURL","headers","get","then","post","delete","put","formData","FormData","append","authAPI","me","login","logout","securityAPI","getCaptchaUrl","email","isAuth","captcha","setAuthUserData","getCaptchaUrlSuccess","captchaUrl","authMe","url","Header","props","className","s","header","src","logo","loginBlock","onClick","logoutMe","to","HeaderContainer","this","React","Component","connect","maxLength30","maxLengthCreator","ReduxLoginForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Input","validate","required","input","checkbox","error","style","formSummaryError","loginMe","loginContainer","withAuthRedirect","NavlinkForPage","link","title","item","activeClassName","active","Navbar","useSelector","usersPage","nav","navContainer","News","useDispatch","Setting","initializet","withSuspense","fallback","Preloader","DialogsContainer","lazy","ProfileContainer","UsersContainer","App","initializeApp","exact","path","render","compose","app","promise","all","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","postPage","messagePage","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","reduxStore","createStore","applyMiddleware","thunkMiddleware","__store__","ReactDOM","StrictMode","store","document","getElementById","value","maxlength","FormControl","meta","hasError","touched","formControl","children","Textarea","restProps","createField","preloaderContainer","preloader","mapStateToProps","WraperContainer"],"mappings":"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","file":"static/js/main.a149a562.chunk.js","sourcesContent":["import { ActionType, messagesPageType, messagesType } from \"../types/types\"\n\nconst InitialState: messagesPageType = {\n    masseges: [\n        { id: 1, message: 'Hi', myMessage: false },\n        { id: 2, message: 'How are you', myMessage: true },\n        { id: 3, message: 'Where are you from??', myMessage: true },\n        { id: 4, message: 'Help', myMessage: false },\n        { id: 5, message: 'Hello', myMessage: true }\n    ],\n\n    dialogs: [\n        { id: 1, name: 'Artem', ava: 'https://images.unsplash.com/photo-1562569633-622303bafef5?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=334&q=80' },\n        { id: 2, name: 'Arina', ava: 'https://images.unsplash.com/photo-1562569633-622303bafef5?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=334&q=80' },\n        { id: 3, name: 'Anita', ava: 'https://images.unsplash.com/photo-1562569633-622303bafef5?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=334&q=80' },\n        { id: 4, name: 'Dima', ava: 'https://images.unsplash.com/photo-1562569633-622303bafef5?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=334&q=80' },\n        { id: 5, name: 'Egor', ava: 'https://images.unsplash.com/photo-1562569633-622303bafef5?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=334&q=80' },\n        { id: 6, name: 'Pavel', ava: 'https://images.unsplash.com/photo-1562569633-622303bafef5?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=334&q=80' }\n    ]\n}\n\nexport const dialogsReduser = (state: messagesPageType = InitialState, action: ActionType) => {\n   \n    switch (action.type) {\n        case 'SEND-MESSAGE': {\n            const sendMessageData: messagesType = {\n                id: 6,\n                message: action.sendMessage,\n                myMessage: true\n            }\n            return  {\n                ...state,\n                masseges: [...state.masseges, sendMessageData],\n                newMessage:''\n            }\n           \n            \n        }       \n        default:\n            return state;\n\n    }\n}\n\nexport const SendMessageAC = (sendMessage: string) => {\n    return {\n        type: 'SEND-MESSAGE',\n        sendMessage: sendMessage\n    } as const\n}\n","import {profileAPI, usersAPI} from \"../api/api\";\nimport {ActionType, DispatchType, postType} from \"../types/types\"\nimport profile, {ProfileType} from \"../Components/Profile/Profile\";\nimport {stopSubmit} from \"redux-form\";\n\n\nexport type postPageType = {\n    postData: Array<postType>\n    profile: any\n    status: string\n}\n\nconst InitialState: postPageType = {\n    postData: [\n        {id: 1, message: 'Today I go to the cinema', numberLike: 12},\n        {id: 2, message: 'Haw are you?', numberLike: 20},\n        {id: 3, message: \"It's my firs post!\", numberLike: 100}\n    ],\n    profile: null,\n    status: '',\n}\n\nexport const profileReducer = (state: postPageType = InitialState, action: ActionType): postPageType => {\n    switch (action.type) {\n        case 'ADD-POST': {\n            const newPostAddData: postType = {\n                id: 5,\n                message: action.newPostAdd,\n                numberLike: 0\n            };\n            return {\n                ...state,\n                postData: [...state.postData, newPostAddData],\n\n            }\n        }\n        case \"DELETE-POST\":\n            return {\n                ...state,\n                postData: [...state.postData.filter(p => p.id !== action.id && p)]\n            }\n        case 'SET-USER-PROFILE':\n            return {...state, profile: action.profile}\n\n        case 'SET-STATUS':\n            return {...state, status: action.status}\n        case 'SAVE-PHOTO':\n            return {...state, profile: {...state.profile, photos: action.photo}}\n\n        default:\n            return state;\n    }\n}\n\nexport const addPost = (newPostAdd: string) => {\n    return {\n        type: 'ADD-POST',\n        newPostAdd: newPostAdd\n    } as const\n}\n\nexport const deletePost = (id: number) => {\n    return {\n        type: 'DELETE-POST',\n        id\n    } as const\n}\n\nexport const setUsersProfile = (profile: any) => {\n    return {\n        type: 'SET-USER-PROFILE',\n        profile\n    } as const\n}\n\nexport const setStatus = (status: string) => {\n    return {\n        type: 'SET-STATUS',\n        status\n    } as const\n}\n\nexport const savePhotoSuccess = (photo: any) => {\n    return {\n        type: 'SAVE-PHOTO',\n        photo\n    } as const\n}\n\n\nexport const getUserProfile = (userID: string) => async (dispatch: DispatchType) => {\n    const data = await usersAPI.getProfile(userID)\n    dispatch(setUsersProfile(data))\n}\n\nexport const getStatus = (userID: string) => async (dispatch: DispatchType) => {\n    const response = await profileAPI.getStatus(userID)\n    dispatch(setStatus(response.data))\n\n}\n\nexport const updateStatus = (status: string) => async (dispatch: DispatchType) => {\n    const response = await profileAPI.updateStatus(status)\n    if (response.data.resultCode === 0) {\n        dispatch(setStatus(status))\n    }\n}\nexport const savePhoto = (photo: any) => async (dispatch: DispatchType) => {\n    const response = await profileAPI.savePhoto(photo)\n    if (response.data.resultCode === 0) {\n        dispatch(savePhotoSuccess(response.data.data.photos))\n    }\n}\n\nexport const saveProfile = (profile: ProfileType) => async (dispatch: any, getState:any) => {\n    const userID = getState().auth.id\n    const response = await profileAPI.saveProfile(profile)\n    if (response.data.resultCode === 0) {\n        dispatch(getUserProfile(userID))\n    } else {\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'someError'\n        dispatch(stopSubmit('edit-profile', {_error: message}))\n        return Promise.reject(message)\n    }\n}\n\n","export const updateObjectInArray = <T>(items: Array<any>, itemId: number, objPropName: any, newObjProps: any) => {\n    return items.map(f => {\n        if (f[objPropName] === itemId) {\n            return {...f, ...newObjProps}\n        }\n        return f\n    })\n}","import {usersAPI} from \"../api/api\";\nimport {DispatchType} from \"../types/types\";\nimport {updateObjectInArray} from \"../utils/helper/objects-helpers\";\n\nexport type ActionType =\n    toggleIsFollowingProgessActionType |\n    ToggleIsFetchingActionType |\n    SetTotalUsersCountActionType |\n    SetCurrentPageActionType |\n    SetFriendsActionType |\n    UnFollowUserActionType |\n    FollowUserActionType\nexport type toggleIsFollowingProgessActionType = ReturnType<typeof toggleIsFollowingProgess>\nexport type ToggleIsFetchingActionType = ReturnType<typeof toggleIsFetching>;\nexport type SetTotalUsersCountActionType = ReturnType<typeof setTotalUsersCount>;\nexport type SetCurrentPageActionType = ReturnType<typeof setCurrentPage>;\nexport type SetFriendsActionType = ReturnType<typeof setUsers>;\nexport type UnFollowUserActionType = ReturnType<typeof unFollowSuccess>;\nexport type FollowUserActionType = ReturnType<typeof followSuccess>;\n\nexport type usersPageType = {\n    users: Array<UserType>\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    followingInProgress: Array<number>\n}\nexport type UserType = {\n    id: number\n    followed: boolean\n    status?: string\n    location?: {\n        city: string\n        country: string\n    }\n    name: string\n    ava: string\n}\nconst InitialState: usersPageType = {\n    users: [],\n    pageSize: 30,\n    totalUsersCount: 200,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: []\n}\n\nexport const usersReducer = (state: usersPageType = InitialState, action: ActionType): usersPageType => {\n    switch (action.type) {\n        case 'FOLLOW-USER': {\n            return {\n                ...state,\n                users: updateObjectInArray<UserType>(state.users, action.usersID, 'id', {followed: true})\n            }\n        }\n        case 'UNFOLLOW-USER': {\n            return {\n                ...state,\n                users: updateObjectInArray<UserType>(state.users, action.usersID, 'id', {followed: false})\n            }\n        }\n        case 'SET-USERS': {\n            return {\n                ...state,\n                users: action.user\n            }\n        }\n        case 'SET-CURRENT-PAGE': {\n            return {\n                ...state,\n                currentPage: action.currentPage\n            }\n        }\n        case 'SET-TOTAL-USERS-COUNT': {\n            return {\n                ...state,\n                totalUsersCount: action.totalUsersCount\n            }\n        }\n        case 'TOGGLE-IS-FETCHING': {\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        }\n        case 'TOGGLE-IS-FOLLOWING-PROGRESS': {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userID]\n                    : state.followingInProgress.filter(id => id !== action.userID)\n            }\n        }\n        default:\n            return state;\n    }\n}\n\nexport const followSuccess = (usersID: number) => {\n    return {\n        type: 'FOLLOW-USER',\n        usersID\n\n    } as const\n}\nexport const unFollowSuccess = (usersID: number) => {\n    return {\n        type: 'UNFOLLOW-USER',\n        usersID\n    } as const\n}\n\nexport const setUsers = (user: Array<UserType>) => {\n    return {\n        type: 'SET-USERS',\n        user\n    } as const\n}\n\nexport const setCurrentPage = (currentPage: number) => {\n    return {\n        type: 'SET-CURRENT-PAGE',\n        currentPage\n    } as const\n}\n\nexport const setTotalUsersCount = (totalUsersCount: number) => {\n    return {\n        type: 'SET-TOTAL-USERS-COUNT',\n        totalUsersCount\n    } as const\n}\n\nexport const toggleIsFetching = (isFetching: boolean) => {\n    return {\n        type: 'TOGGLE-IS-FETCHING',\n        isFetching\n    } as const\n}\n\nexport const toggleIsFollowingProgess = (isFetching: boolean, userID: number) => {\n    return {\n        type: 'TOGGLE-IS-FOLLOWING-PROGRESS',\n        isFetching, userID\n    } as const\n}\n\nexport const requestUsers = (currentPage: number, pageSize: number) => async (dispatch: DispatchType) => {\n    dispatch(toggleIsFetching(true))\n    dispatch(setCurrentPage(currentPage))\n    const data = await usersAPI.getUsers(currentPage, pageSize)\n    dispatch(toggleIsFetching(false))\n    dispatch(setUsers(data.items))\n    dispatch(setTotalUsersCount(data.totalCount))\n}\n\nconst followUnfollowFlow = async (dispatch: DispatchType, id: number, apiMethod: any, actionCreate: any) => {\n    dispatch(toggleIsFollowingProgess(true, id))\n    const data = await apiMethod(id)\n    if (data.resultCode === 0) {\n        dispatch(actionCreate(id))\n    }\n    dispatch(toggleIsFollowingProgess(false, id))\n}\n\nexport const follow = (id: number) => async (dispatch: DispatchType) => {\n    const apiMethod = usersAPI.followToUser.bind(id)\n    const actionCreate = followSuccess\n    followUnfollowFlow(dispatch, id, apiMethod, actionCreate)\n}\n\nexport const unFollow = (id: number) => async (dispatch: DispatchType) => {\n    const apiMethod = usersAPI.unFollowToUser.bind(id)\n    const actionCreate = unFollowSuccess\n    followUnfollowFlow(dispatch, id, apiMethod, actionCreate)\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"LoginPage_loginContainer__2ACPH\"};","import axios from \"axios\";\nimport {LoginFormPropsType} from \"../Components/Login/LoginForm/LoginForm\";\nimport {ProfileType} from \"../Components/Profile/Profile\";\n\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\n    headers: {\n        \"API-KEY\": \"89087f1a-df84-4609-ac91-9f089fdba243\"\n    }\n})\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10) {\n        return instance.get(`users?page=${currentPage}&count=${30}`,\n        ).then(response => response.data)\n    },\n    followToUser(id: number) {\n        return instance.post(`follow/${id}`\n        ).then(response => response.data)\n    },\n    unFollowToUser(id: number) {\n        return instance.delete(`follow/${id}`\n        ).then(response => response.data)\n    },\n    getProfile(userID: string) {\n        return profileAPI.getProfile(userID)\n    }\n}\n\nexport const profileAPI = {\n    getProfile(userID: string) {\n        return instance.get(`profile/` + userID)\n            .then(response => response.data)\n    },\n    getStatus(userID: string) {\n        return instance.get(`profile/status/` + userID)\n    },\n    updateStatus(status: string) {\n        return instance.put(`profile/status`, {status: status})\n    },\n    savePhoto(photo:any){\n        const formData = new FormData()\n        formData.append('image',photo)\n        return instance.put(`profile/photo`, formData, {\n            headers:{\n                'Content-Type':'multipart/from-data'\n            }\n        })\n    },\n    saveProfile(profile:ProfileType){\n        return instance.put(`profile`, profile)\n    }\n}\n\nexport const authAPI = {\n    me() {\n        return instance.get(`auth/me`)\n            .then(response => response.data)\n    },\n    login(formData: LoginFormPropsType) {\n        return instance.post(`auth/login`, formData)\n\n    },\n    logout() {\n        return instance.delete(`auth/login`)\n            .then(response => response.data)\n    }\n}\n\nexport const securityAPI= {\n    getCaptchaUrl(){\n        return instance.get(`security/get-captcha-url`)\n    }\n}\n","import {authAPI, securityAPI, usersAPI} from \"../api/api\";\nimport {LoginFormPropsType} from \"../Components/Login/LoginForm/LoginForm\";\nimport {ActionType, DispatchType} from \"../types/types\";\nimport {stopSubmit} from \"redux-form\";\n\nexport type authDataType = {\n    id: number | null\n    email: string | null\n    login: string\n    isAuth: boolean\n    captcha: string | null\n}\n\n\nconst InitialState: authDataType = {\n    id: null,\n    email: null,\n    login: '',\n    isAuth: false,\n    captcha: null\n}\n\nexport const authReducer = (state: authDataType = InitialState, action: ActionType): authDataType => {\n\n    switch (action.type) {\n        case 'SET-AUTH-USER-DATA': {\n            return {\n                ...state,\n                ...action.data,\n            }\n        }\n        case 'GET-CAPTCHA-URL-SUCCESS': {\n            return {...state, captcha:action.captchaUrl}\n        }\n        default:\n            return state;\n\n    }\n}\n\nexport const setAuthUserData = (data: authDataType) => {\n    return {\n        type: 'SET-AUTH-USER-DATA',\n        data\n\n    } as const\n}\n\nexport const getCaptchaUrlSuccess = (captchaUrl: string) => {\n    return {\n        type: 'GET-CAPTCHA-URL-SUCCESS',\n        captchaUrl\n\n    } as const\n}\n\n\nexport const authMe = () => async (dispatch: DispatchType) => {\n    const data = await authAPI.me()\n    if (data.resultCode === 0) {\n        dispatch(setAuthUserData({isAuth: true, ...data.data}))\n    }\n}\n\nexport const loginMe = (formData: LoginFormPropsType) => async (dispatch: any) => {\n    let response = await authAPI.login(formData)\n    if (response.data.resultCode === 0) {\n        dispatch(authMe())\n    } else {\n        if (response.data.resultCode === 10) {\n            dispatch(getCaptchaUrl())\n        }\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'someError'\n        dispatch(stopSubmit('login', {_error: message}))\n    }\n}\n\nexport const getCaptchaUrl = () => async (dispatch: DispatchType) => {\n    const response = await securityAPI.getCaptchaUrl()\n    const captchaUrl = response.data.url\n    dispatch(getCaptchaUrlSuccess(captchaUrl))\n\n}\n\nexport const logoutMe = () => async (dispatch: DispatchType) => {\n    const data = await authAPI.logout()\n    if (data.resultCode === 0) {\n        dispatch(setAuthUserData({id: null, email: null, login: '', isAuth: false, captcha:null}))\n    }\n}","export default __webpack_public_path__ + \"static/media/logo.73d85abf.svg\";","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport s from './Header.module.scss';\nimport logo from '../../assents/image/logo.svg'\n\ntype HeaderPropsType = {\n    isAuth: boolean\n    login: string\n    logoutMe: () => void\n}\n\nconst Header = (props: HeaderPropsType) => {\n    return (\n        <header className={s.header}>\n            <img\n                src={logo}/>\n            <div className={s.loginBlock}>\n                {props.isAuth\n                    ? <div>{props.login}-\n                        <button onClick={props.logoutMe}>Log out</button>\n                    </div>\n                    : <NavLink to={'/login'}>Login</NavLink>}\n            </div>\n        </header>\n    )\n}\nexport default Header;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {authDataType, authMe, logoutMe, setAuthUserData} from '../../redux/auth-reduser';\nimport {AppStoreType} from '../../redux/redux-store';\nimport Header from './Header';\n\ntype PropsType = {\n    isAuth: boolean\n    login: string\n    setAuthUserData: (data: authDataType) => void\n    authMe: () => void\n    logoutMe: () => void\n}\n\n\nclass HeaderContainer extends React.Component<PropsType> {\n    componentDidMount() {\n        this.props.authMe()\n    }\n\n    render() {\n        return <Header logoutMe={this.props.logoutMe} isAuth={this.props.isAuth} login={this.props.login}/>\n    }\n}\n\ntype mapStateToPropsType = {\n    isAuth: boolean\n    login: string\n}\n\nconst mapStateToProps = (state: AppStoreType): mapStateToPropsType => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login,\n})\n\n\nexport default connect(mapStateToProps, {setAuthUserData, authMe, logoutMe})(HeaderContainer);","import React from 'react';\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\nimport {maxLengthCreator, required} from '../../../utils/validators/validator';\nimport {Input} from '../../common/FormsControls/FormsControls';\nimport s from './LoginForm.module.scss';\nimport style from '../../common/FormsControls/FormsControls.module.scss'\n\n\nexport type LoginFormPropsType = {\n    email: string\n    password: string\n    rememberMe: boolean\n    captcha: string | null\n}\n\nexport type LoginPropsType = {\n    captchaUrl: string | null\n}\n\nconst maxLength30 = maxLengthCreator(30)\n\nconst LoginForm: React.FC<InjectedFormProps<LoginFormPropsType, LoginPropsType> & LoginPropsType> = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit} className={s.form}>\n            <div>\n                <Field placeholder={'email'} name={'email'} component={Input} validate={[required, maxLength30]}\n                       className={s.input}/>\n            </div>\n            <div>\n                <Field placeholder={'password'} type={'password'} name={'password'} component={Input}\n                       validate={[required, maxLength30]} className={s.input}/>\n            </div>\n            <div>\n                <Field type={'checkbox'} component={'input'} name={'rememberMe'} className={s.checkbox}/> remember me\n            </div>\n            {props.captchaUrl && <img src={props.captchaUrl}/>}\n            {props.captchaUrl && <Field placeholder={'Symbols from image'} name={'captcha'} component={Input}\n                                        validate={[required]}\n                                        className={s.input}/>}\n            {props.error && <div className={style.formSummaryError}>\n                {props.error}\n            </div>}\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\n\nconst ReduxLoginForm = reduxForm<LoginFormPropsType, LoginPropsType>({form: 'login'})(LoginForm)\nexport default ReduxLoginForm;","import React from 'react';\nimport {loginMe} from '../../redux/auth-reduser';\nimport ReduxLoginForm, {LoginFormPropsType} from './LoginForm/LoginForm';\nimport s from './LoginPage.module.scss';\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport {AppStoreType} from \"../../redux/redux-store\";\n\ntype LoginPagePropsType = {\n    loginMe: (formData: LoginFormPropsType) => void\n    isAuth: boolean\n    captchaUrl: string | null\n}\n\nconst LoginPage = ({loginMe, isAuth, captchaUrl}: LoginPagePropsType) => {\n\n    const onSubmit = (formData: LoginFormPropsType) => {\n        loginMe(formData)\n    }\n    if (isAuth) {\n        return <Redirect to={\"/profile\"}/>\n    }\n\n    return (\n        <div className={s.loginContainer}>\n            <h1>Login</h1>\n            <ReduxLoginForm onSubmit={onSubmit} captchaUrl={captchaUrl}/>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state: AppStoreType) => ({\n    captchaUrl: state.auth.captcha,\n    isAuth: state.auth.isAuth\n})\nexport default connect(mapStateToProps, {loginMe})(LoginPage);","import React from 'react';\nimport withAuthRedirect from '../../hoc/withAuthRedirect';\nimport s from './Music.module.css';\n\n\nconst Music = () => {\n    return (\n\n       <div>\n         <button>+</button>\n       </div>\n  \n    )\n}\nexport default withAuthRedirect(Music);","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport s from './NavlinkForPage.module.scss';\n\ntype NavlinkPropsType = {\n    link: string\n    title: string\n}\n\nconst NavlinkForPage = ({link, title}: NavlinkPropsType) => {\n    return (\n        <div className={s.item}>\n            <NavLink to={link} activeClassName={s.active}>{title}</NavLink>\n        </div>\n    )\n}\nexport default NavlinkForPage;","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {AppStoreType} from '../../redux/redux-store';\nimport {UserType} from '../../redux/users-reducer';\nimport s from './Navbar.module.scss';\nimport NavlinkForPage from \"../common/NavlinkForPage/NavlinkForPage\";\n\n\nconst Navbar = () => {\n    const users = useSelector<AppStoreType, Array<UserType>>(state => state.usersPage.users)\n    return (\n        <nav className={s.nav}>\n            <div className={s.navContainer}>\n                <NavlinkForPage link={'/profile'} title={'Profile'}/>\n                <NavlinkForPage link={'/users'} title={'Users'}/>\n                <NavlinkForPage link={'/dialogs'} title={'Massages'}/>\n                <NavlinkForPage link={'/news'} title={'News'}/>\n                <NavlinkForPage link={'/music'} title={'Music'}/>\n                <NavlinkForPage link={'/setting'} title={'Settings'}/>\n            </div>\n        </nav>\n    )\n}\nexport default Navbar;","import React from 'react';\nimport {useDispatch} from \"react-redux\";\n\n\nconst News = () => {\n    const dispatch = useDispatch()\n    return (\n\n        <div>\n            News\n\n        </div>\n\n    )\n}\nexport default News;","import React from 'react';\nimport s from './Setting.module.css';\n\n\nconst Setting = () => {\n    return (\n\n       <div>\n         Setting\n       </div>\n  \n    )\n}\nexport default Setting;","import {ActionType} from \"../types/types\";\nimport {authMe} from \"./auth-reduser\";\n\nexport type appDataType = {\n    initializet: boolean\n}\n\n\nconst InitialState: appDataType = {\n    initializet: false,\n}\n\nexport const appReducer = (state: appDataType = InitialState, action: ActionType): appDataType => {\n\n    switch (action.type) {\n        case 'INITIALIZET-SUCCESS': {\n            return {\n                ...state,\n                initializet: true\n\n            }\n        }\n        default:\n            return state;\n\n    }\n}\n\nexport const initializetSuccess = () => {\n    return {\n        type: 'INITIALIZET-SUCCESS',\n    } as const\n}\n\n\nexport const initializeApp = () => (dispatch: any) => {\n    let promise = dispatch(authMe())\n    Promise.all([promise]).then(() => dispatch(initializetSuccess()))\n}","import React, {ComponentType, Suspense} from \"react\";\nimport Preloader from \"../Components/common/Preloader/Preloader\";\n\nexport function withSuspense(Component: ComponentType) {\n    return () => {\n        return (\n            <Suspense fallback={<Preloader/>}>\n                <Component />\n            </Suspense>\n        )\n    }\n}\n","import React, {Suspense} from 'react';\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport {compose} from 'redux';\nimport './App.css';\nimport HeaderContainer from './Components/Header/HeaderContainer';\nimport LoginPage from './Components/Login/LoginPage';\nimport Music from './Components/Music/Music';\nimport Navbar from './Components/Navbar/Navbar';\nimport News from './Components/News/News';\nimport Setting from './Components/Setting/Setting';\nimport {AppStoreType} from './redux/redux-store';\nimport {connect} from \"react-redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./Components/common/Preloader/Preloader\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\n\nconst DialogsContainer = React.lazy(() => import('./Components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./Components/Profile/ProfileContainer'));\nconst UsersContainer = React.lazy(() => import('./Components/Users/UsersContainer'));\n\ntype AppType = {\n    // store: AppStoreType\n    //store: Store<any, ActionType>\n    store: any,\n    initializeApp: () => void\n    initializet: boolean\n}\n\nclass App extends React.Component<AppType> {\n\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if (!this.props.initializet) {\n            return <Preloader/>\n        }\n\n        return (\n\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Switch>\n                        {/*<Redirect from=\"about\" to=\"/profile/\"/>*/}\n                        <Route exact path='/' render={() => <Redirect to={'/profile'}/>}/>\n                        <Route path='/profile/:userID?' render={withSuspense(ProfileContainer)}/>\n                        <Route path='/dialogs' render={withSuspense(DialogsContainer)}/>\n                        <Route path='/news' render={() => <News/>}/>\n                        <Route path='/music' render={() => <Music/>}/>\n                        <Route path='/setting' render={() => <Setting/>}/>\n                        <Route path='/users' render={withSuspense(UsersContainer)}/>\n                        <Route path='/login' render={() => <LoginPage/>}/>\n                        <Route path='*' render={() => <div>404 Not found</div>}/>\n                    </Switch>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state: AppStoreType) => ({\n    initializet: state.app.initializet\n})\n\nexport default compose(\n    connect(mapStateToProps, {initializeApp})(App)\n);\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {dialogsReduser} from './dialogs-reduser';\nimport {profileReducer} from './profile-reducer';\nimport {applyMiddleware, combineReducers, compose, createStore} from 'redux';\nimport {usersReducer} from './users-reducer';\nimport {authReducer} from './auth-reduser';\nimport thunkMiddleware from 'redux-thunk';\nimport {reducer as formReducer} from 'redux-form'\nimport {appReducer} from './app-reducer';\n\nconst reducers = combineReducers({\n    postPage: profileReducer,\n    messagePage: dialogsReduser,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer\n})\n\n//@ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst reduxStore = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\nexport type AppStoreType = ReturnType<typeof reducers>\n\n//@ts-ignore\nwindow.__store__ = reduxStore\n// const reduxStore = createStore(reducers, applyMiddleware(thunkMiddleware));\n\nexport default reduxStore","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport reduxStore from './redux/redux-store';\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <Provider store={reduxStore}>\n                <App store={reduxStore}/>\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n// let state = useSelector<AppStoreType, Array<stateType>>(s=>state)\n// const subscribeRenderEntireTree = () => renderEntireTree(reduxStore.getState())\n// reduxStore.subscribe(subscribeRenderEntireTree)\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(); \n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginForm_form__3zkcS\",\"input\":\"LoginForm_input__A4twx\",\"checkbox\":\"LoginForm_checkbox__3o0GS\"};","export const required = (value: string) => {\n    if (value) return undefined;\n    return 'Field is rejquired'\n}\n\nexport const maxLengthCreator = (maxlength: number) => (value: string) => {\n    if (value.length > maxlength) return `max length is ${maxlength}  symbols`;\n    return undefined\n}\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormsControls_error__25lZQ\",\"formSummaryError\":\"FormsControls_formSummaryError__3SArY\"};","import React, {DetailedHTMLProps, TextareaHTMLAttributes} from \"react\"\nimport s from './FormsControls.module.scss'\nimport {required} from \"../../../utils/validators/validator\";\nimport {Field} from \"redux-form\";\n\nconst FormControl = ({input, meta, ...props}: any) => {\n    const hasError = meta.touched && meta.error\n\n    return <div className={`${s.formControl}  ${hasError && s.error}`}>\n        <div>\n            {props.children}\n        </div>\n        <div>\n            {hasError && <span>{meta.error}</span>}\n        </div>\n    </div>\n}\n\nexport const Textarea = (props: any) => {\n    const {input, meta, ...restProps} = props\n    return <FormControl {...props} ><textarea {...input}{...restProps} /> </FormControl>\n}\n\nexport const Input = (props: any) => {\n    const {input, meta, ...restProps} = props\n    return <FormControl {...props} ><input {...input}{...restProps} /> </FormControl>\n}\n\nexport const createField = (placeholder: string | null, name: string, component: any, validate: any[], className: any, type: any) => {\n    return <div>\n        <Field placeholder={placeholder} name={name} component={component} validate={validate}\n               className={className} type={type}/>\n    </div>\n}","export default __webpack_public_path__ + \"static/media/preloader.d564adc2.svg\";","import React from \"react\";\nimport preloader from \"../../../assents/image/preloader.svg\"\nimport s from \"./Preloader.module.css\"\n\n\nconst Preloader = () =>{\n    return <div className={s.preloaderContainer}><img src={preloader} className={s.preloader} /> </div>\n}\n\nexport default Preloader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__yfRMG\",\"loginBlock\":\"Header_loginBlock__2TtaP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1pZty\",\"navContainer\":\"Navbar_navContainer__3lypU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"NavlinkForPage_item__1QzgZ\",\"active\":\"NavlinkForPage_active__2SybX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderContainer\":\"Preloader_preloaderContainer__cTqqf\",\"preloader\":\"Preloader_preloader__1X58S\"};","import React, {ComponentType} from \"react\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport {AppStoreType} from \"../redux/redux-store\";\n\ntype MapStatePropsType = {\n    isAuth: boolean\n}\n\nconst mapStateToProps = (state: AppStoreType): MapStatePropsType => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n\nfunction withAuthRedirect<T>(Component: ComponentType<T>) {\n\n    class WraperContainer extends React.Component<MapStatePropsType> {\n        render(): React.ReactNode {\n            let {isAuth, ...restProps} = this.props\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\n            return <Component {...restProps as T} />\n        }\n    }\n\n    const ConnectedAuthReduser = connect(mapStateToProps)(WraperContainer)\n    return ConnectedAuthReduser\n}\n\n\nexport default withAuthRedirect"],"sourceRoot":""}