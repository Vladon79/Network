{"version":3,"sources":["Components/Profile/Profile.module.scss","Components/common/Preloader/Preloader.module.css","Components/Login/LoginPage.module.scss","Components/Users/User/User.module.scss","Components/common/Button/Button.module.scss","Components/Dialogs/Dialogs.module.scss","redux/dialogs-reduser.ts","Components/Dialogs/DialogItem/DialogItem.tsx","Components/Dialogs/Message/Message.tsx","Components/common/FormsControls/FormsControls.tsx","utils/validators/validator.ts","Components/Dialogs/Dialogs.tsx","hoc/withAuthRedirect.tsx","Components/Dialogs/DialogsContainer.tsx","api/api.ts","redux/auth-reduser.ts","assents/image/logo.svg","Components/Header/Header.tsx","Components/Header/HeaderContainer.tsx","Components/Login/LoginForm/LoginForm.tsx","Components/Login/LoginPage.tsx","Components/Music/Music.tsx","Components/common/NavlinkForPage/NavlinkForPage.tsx","Components/Navbar/Navbar.tsx","Components/News/News.tsx","Components/Profile/MyPost/MyPostTextareaForm.tsx","assents/image/user.png","Components/Profile/MyPost/Post/Post.tsx","Components/Profile/MyPost/MyPost.tsx","assents/image/preloader.svg","Components/common/Preloader/Preloader.tsx","Components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","Components/Profile/ProfileInfo/ProfileInfo.tsx","Components/Profile/Profile.tsx","redux/profile-reducer.ts","Components/Profile/ProfileContainer.tsx","Components/Setting/Setting.tsx","utils/helper/objects-helpers.ts","redux/users-reducer.ts","Components/common/Button/Button.tsx","Components/Users/User/User.tsx","Components/common/Paginator/Paginator.tsx","Components/Users/Users.tsx","redux/users-selectors.ts","Components/Users/UsersContainer.tsx","redux/app-reducer.ts","App.tsx","reportWebVitals.ts","redux/redux-store.ts","index.tsx","Components/Profile/ProfileInfo/ProfileInfo.module.scss","Components/Profile/MyPost/MyPost.module.scss","Components/common/FormsControls/FormsControls.module.scss","Components/Login/LoginForm/LoginForm.module.scss","Components/Profile/MyPost/Post/Post.module.scss","Components/common/Paginator/Paginator.module.scss","Components/Dialogs/Message/Message.module.scss","Components/Header/Header.module.scss","Components/Navbar/Navbar.module.scss","Components/common/NavlinkForPage/NavlinkForPage.module.scss"],"names":["module","exports","InitialState","masseges","id","message","myMessage","dialogs","name","ava","DialogItem","props","path","className","s","dialog","src","to","activeClassName","active","Messages","textMesage","myMassege","YoutextMesage","MytextMesage","FormControl","input","meta","hasError","touched","error","formControl","children","Textarea","restProps","Input","required","value","maxLengthCreator","maxlength","length","Dialogs","messagesElement","messages","map","m","Message","dialogsElement","d","dialogsItem","addMessage","DialogReduxForm","onSubmit","newMessage","console","log","SendMessage","maxLength200","reduxForm","form","handleSubmit","Field","placeholder","component","validate","mapStateToProps","state","isAuth","auth","withAuthRedirect1","Component","WraperContainer","this","React","connect","compose","withAuthRedirect","messagePage","dispatch","text","type","sendMessage","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","get","then","response","data","followToUser","post","unFollowToUser","delete","getProfile","userID","profileAPI","getStatus","updateStatus","status","put","authAPI","formData","email","login","setAuthUserData","authMe","a","resultCode","Header","header","logo","loginBlock","onClick","logoutMe","HeaderContainer","maxLength30","ReduxLoginForm","checkbox","style","formSummaryError","loginMe","stopSubmit","_error","loginContainer","NavlinkForPage","link","title","item","Navbar","useSelector","usersPage","users","nav","navContainer","News","useDispatch","TextareaReduxForm","Post","userPhoto","massage","like","MyPost","memo","postElements","p","numberLike","mypost","mypostContainer","newPost","addPost","myPosts","Preloader","preloaderContainer","preloader","ProfileStatusWithHooks","useState","setStatus","editMode","setEditMode","useEffect","profileStatus","statusInput","autoFocus","onChange","e","currentTarget","onBlur","statusText","onDoubleClick","ProfileInfo","profile","PrfileInfo","PrfileInfoImg","photos","large","discriptionInfo","Profile","profileContainer","newPostChange","postData","setUsersProfile","ProfileContainer","match","params","String","getUserProfile","postPage","newPostAdd","withRouter","Setting","updateObjectInArray","items","itemId","objPropName","newObjProps","f","pageSize","totalUsersCount","isFetching","followingInProgress","followSuccess","usersID","unFollowSuccess","setCurrentPage","toggleIsFetching","toggleIsFollowingProgess","followUnfollowFlow","apiMethod","actionCreate","Button","finalClassName","button","disabled","User","user","userPage","avaButton","avaDiv","buttonDiv","followed","userButton","unFollow","some","follow","info","NameStatus","userInfo","location","country","city","Paginator","onPageChange","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","pageNumber","filter","selectedPage","notselectpage","Users","u","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","requestUsers","bind","totalCount","initializet","App","initializeApp","render","DialogsContainer","app","promise","Promise","all","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","newPostAddData","sendMessageData","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","reduxStore","createStore","applyMiddleware","thunkMiddleware","__store__","ReactDOM","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.b086cdf3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__Raocc\",\"profileContainer\":\"Profile_profileContainer__3htoh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderContainer\":\"Preloader_preloaderContainer__cTqqf\",\"preloader\":\"Preloader_preloader__1X58S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"LoginPage_loginContainer__2ACPH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPage\":\"User_userPage__2fV_d\",\"avaButton\":\"User_avaButton__2XvCX\",\"avaDiv\":\"User_avaDiv__8o_Y5\",\"ava\":\"User_ava__2oGSE\",\"buttonDiv\":\"User_buttonDiv__1YVJg\",\"userButton\":\"User_userButton__1V3Wv\",\"info\":\"User_info__1DROC\",\"NameStatus\":\"User_NameStatus__3Tl6P\",\"name\":\"User_name__339LZ\",\"userInfo\":\"User_userInfo__1rMPm\",\"location\":\"User_location__Me1bg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2czcP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1nBy9\",\"dialogsItem\":\"Dialogs_dialogsItem__2c3zI\",\"dialog\":\"Dialogs_dialog__2pIox\",\"active\":\"Dialogs_active__3OOF6\",\"messages\":\"Dialogs_messages__164NY\",\"addMessage\":\"Dialogs_addMessage__1sej9\"};","import { ActionType, messagesPageType, messagesType } from \"../types/types\"\n\nconst InitialState: messagesPageType = {\n    masseges: [\n        { id: 1, message: 'Hi', myMessage: false },\n        { id: 2, message: 'How are you', myMessage: true },\n        { id: 3, message: 'Where are you from??', myMessage: true },\n        { id: 4, message: 'Help', myMessage: false },\n        { id: 5, message: 'Hello', myMessage: true }\n    ],\n\n    dialogs: [\n        { id: 1, name: 'Artem', ava: 'https://images.unsplash.com/photo-1562569633-622303bafef5?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=334&q=80' },\n        { id: 2, name: 'Arina', ava: 'https://images.unsplash.com/photo-1562569633-622303bafef5?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=334&q=80' },\n        { id: 3, name: 'Anita', ava: 'https://images.unsplash.com/photo-1562569633-622303bafef5?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=334&q=80' },\n        { id: 4, name: 'Dima', ava: 'https://images.unsplash.com/photo-1562569633-622303bafef5?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=334&q=80' },\n        { id: 5, name: 'Egor', ava: 'https://images.unsplash.com/photo-1562569633-622303bafef5?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=334&q=80' },\n        { id: 6, name: 'Pavel', ava: 'https://images.unsplash.com/photo-1562569633-622303bafef5?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=334&q=80' }\n    ]\n}\n\nexport const dialogsReduser = (state: messagesPageType = InitialState, action: ActionType) => {\n   \n    switch (action.type) {\n        case 'SEND-MESSAGE': {\n            const sendMessageData: messagesType = {\n                id: 6,\n                message: action.sendMessage,\n                myMessage: true\n            }\n            return  {\n                ...state,\n                masseges: [...state.masseges, sendMessageData],\n                newMessage:''\n            }\n           \n            \n        }       \n        default:\n            return state;\n\n    }\n}\n\nexport const SendMessageAC = (sendMessage: string) => {\n    return {\n        type: 'SEND-MESSAGE',\n        sendMessage: sendMessage\n    } as const\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { dialogsType } from '../../../types/types';\nimport s from './../Dialogs.module.scss';\n\n\n\nconst DialogItem = (props: dialogsType) => {\n  let path = '/dialogs/' + props.id;\n  return (\n    <div className={s.dialog}>\n      <img src={props.ava}/>\n      <NavLink to={path} activeClassName={s.active}>{props.name}</NavLink>\n    </div>\n  )\n}\n\n\nexport default DialogItem;","import React from 'react';\nimport s from './Message.module.scss'\n\n\ntype PropsMessege = {\n  textMesage: string\n  myMassege: boolean\n}\n\nconst Messages = ({ textMesage, myMassege, ...props }: PropsMessege) => {\n\n  return (\n    \n      <div className={myMassege ? s.YoutextMesage :  s.MytextMesage}>\n        {textMesage}\n      </div>\n      \n  )\n}\n\n\nexport default Messages;","import React, {DetailedHTMLProps, TextareaHTMLAttributes} from \"react\"\nimport s from './FormsControls.module.scss'\nimport {required} from \"../../../utils/validators/validator\";\nimport {Field} from \"redux-form\";\n\nconst FormControl = ({input, meta, ...props}: any) => {\n    const hasError = meta.touched && meta.error\n\n    return <div className={`${s.formControl}  ${hasError && s.error}`}>\n        <div>\n            {props.children}\n        </div>\n        <div>\n            {hasError && <span>{meta.error}</span>}\n        </div>\n    </div>\n}\n\nexport const Textarea = (props: any) => {\n    const {input, meta, ...restProps} = props\n    return <FormControl {...props} ><textarea {...input}{...restProps} /> </FormControl>\n}\n\nexport const Input = (props: any) => {\n    const {input, meta, ...restProps} = props\n    return <FormControl {...props} ><input {...input}{...restProps} /> </FormControl>\n}\n\nexport const createField = (placeholder: string | null, name: string, component: any, validate: any[], className: any, type: any) => {\n    return <div>\n        <Field placeholder={placeholder} name={name} component={component} validate={validate}\n               className={className} type={type}/>\n    </div>\n}","export const required = (value: string) => {\n    if (value) return undefined;\n    return 'Field is rejquired'\n}\n\nexport const maxLengthCreator = (maxlength: number) => (value: string) => {\n    if (value.length > maxlength) return `max length is ${maxlength}  symbols`;\n    return undefined\n}\n\n","import React, { ChangeEvent } from 'react';\nimport DialogItem from './DialogItem/DialogItem';\nimport s from './Dialogs.module.scss';\nimport Messages from './Message/Message';\nimport { dialogsType, messagesType } from '../../types/types';\nimport { Redirect } from 'react-router-dom';\nimport Button from '../common/Button/Button';\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form';\nimport { Textarea } from '../common/FormsControls/FormsControls';\nimport { maxLengthCreator, required } from '../../utils/validators/validator';\n\ntype DialogsType = {\n  newMessage: string\n  messages: Array<messagesType>\n  dialogs: Array<dialogsType>\n  NewMessageChange: (text: string) => void\n  SendMessage: (text: string) => void\n  isAuth: boolean\n}\n\nconst Dialogs = (props: DialogsType) => {\n\n  const messagesElement = props.messages.map(m => <Messages key={m.id} textMesage={m.message} myMassege={m.myMessage} />)\n  const dialogsElement = props.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id} ava={d.ava} />)\n\n  const onSubmit = ({ newMessage }: DialogsFormPropsType) => {\n    console.log(newMessage)\n    props.SendMessage(newMessage)\n  }\n\n  return (\n    <div className={s.dialogs}>\n      <div className={s.dialogsItem}>\n        {dialogsElement}\n      </div>\n\n      <div className={s.messages}>\n        <div>{messagesElement}</div>\n\n        <div className={s.addMessage}>\n          <DialogReduxForm onSubmit={onSubmit} />\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default Dialogs;\n\nexport type DialogsFormPropsType = {\n  newMessage: string\n}\n\nconst maxLength200 = maxLengthCreator(200)\n\nconst DialogsForm: React.FC<InjectedFormProps<DialogsFormPropsType>> = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit} className={s.form}>\n      {/* e.prevendDefault:сбор всех данных,упаковываются в обьект: контейнерная компонента вызывает onSubmit(formData) */}\n      <div>\n        <Field placeholder={'New message'} name={'newMessage'} component={Textarea} validate={[required, maxLength200]} className={s.input} />\n      </div>\n      <div>\n        <button>Send</button>\n        {/* <Button title={'Login'} onClick={}/> */}\n      </div>\n    </form>\n  )\n}\n\n\n\nconst DialogReduxForm = reduxForm<DialogsFormPropsType>({ form: 'newMessage' })(DialogsForm)","import React, {ComponentType} from \"react\";\nimport {connect, useSelector} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport {AppStoreType} from \"../redux/redux-store\";\n\ntype MapStatePropsType = {\n    isAuth: boolean\n}\n\nconst mapStateToProps = (state: AppStoreType): MapStatePropsType => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n\nfunction withAuthRedirect1<T>(Component: ComponentType<T>) {\n\n    class WraperContainer extends React.Component<MapStatePropsType> {\n        render(): React.ReactNode {\n            let {isAuth, ...restProps} = this.props\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\n            return <Component {...restProps as T} />\n        }\n    }\n\n    const ConnectedAuthReduser = connect(mapStateToProps)(WraperContainer)\n    return ConnectedAuthReduser\n}\n\n\nexport default withAuthRedirect1","import {  SendMessageAC } from '../../redux/dialogs-reduser';\nimport { connect } from 'react-redux';\nimport { AppStoreType } from '../../redux/redux-store';\nimport Dialogs from './Dialogs';\nimport { compose, Dispatch } from 'redux';\nimport withAuthRedirect from '../../hoc/withAuthRedirect';\nimport React from 'react';\n\n\nconst mapStateToProps = (state: AppStoreType) => {\n  return {\n    messages: state.messagePage.masseges,\n    dialogs: state.messagePage.dialogs,\n    isAuth: state.auth.isAuth\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    SendMessage: (text: string) => {\n      dispatch(SendMessageAC(text))\n    },\n  }\n}\n\nexport default compose<React.ComponentType>(\n    withAuthRedirect,\n  connect(mapStateToProps, mapDispatchToProps)\n)(Dialogs)","import axios from \"axios\";\nimport {LoginFormPropsType} from \"../Components/Login/LoginForm/LoginForm\";\n\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\n    headers: {\n        \"API-KEY\": \"89087f1a-df84-4609-ac91-9f089fdba243\"\n    }\n})\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10) {\n        return instance.get(`users?page=${currentPage}&count=${30}`,\n        ).then(response => response.data)\n    },\n    followToUser(id: number) {\n        return instance.post(`follow/${id}`\n        ).then(response => response.data)\n    },\n    unFollowToUser(id: number) {\n        return instance.delete(`follow/${id}`\n        ).then(response => response.data)\n    },\n    getProfile(userID: string) {\n        return profileAPI.getProfile(userID)\n    }\n}\n\nexport const profileAPI = {\n    getProfile(userID: string) {\n        return instance.get(`profile/` + userID)\n            .then(response => response.data)\n    },\n    getStatus(userID: string) {\n        return instance.get(`profile/status/` + userID)\n    },\n    updateStatus(status: string) {\n        return instance.put(`profile/status`, {status: status})\n    },\n}\n\nexport const authAPI = {\n    me() {\n        return instance.get(`auth/me`)\n            .then(response => response.data)\n    },\n    login(formData: LoginFormPropsType) {\n        return instance.post(`/auth/login`, formData)\n\n    },\n    logout() {\n        return instance.delete(`/auth/login`)\n            .then(response => response.data)\n    }\n}\n","import {authAPI, usersAPI} from \"../api/api\";\nimport {LoginFormPropsType} from \"../Components/Login/LoginForm/LoginForm\";\nimport {ActionType, DispatchType} from \"../types/types\";\nimport {stopSubmit} from \"redux-form\";\n\nexport type authDataType = {\n    id: number | null\n    email: string | null\n    login: string\n    isAuth: boolean\n}\n\n\nconst InitialState: authDataType = {\n    id: null,\n    email: null,\n    login: '',\n    isAuth: false\n}\n\nexport const authReducer = (state: authDataType = InitialState, action: ActionType): authDataType => {\n\n    switch (action.type) {\n        case 'SET-AUTH-USER-DATA': {\n            return {\n                ...state,\n                ...action.data,\n            }\n        }\n        default:\n            return state;\n\n    }\n}\n\nexport const setAuthUserData = (data: authDataType) => {\n    return {\n        type: 'SET-AUTH-USER-DATA',\n        data\n\n    } as const\n}\n\n\nexport const authMe = () => async (dispatch: DispatchType) => {\n    const data = await authAPI.me()\n    if (data.resultCode === 0) {\n        dispatch(setAuthUserData({isAuth: true, ...data.data}))\n    }\n}\n\nexport const loginMe = (formData: LoginFormPropsType) => async (dispatch: any) => {\n    let response = await authAPI.login(formData)\n    if (response.data.resultCode === 0) {\n        dispatch(authMe())\n    } else {\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'someError'\n        dispatch(stopSubmit('login', {_error: message}))\n    }\n}\n\nexport const logoutMe = () => async (dispatch: DispatchType) => {\n    const data = await authAPI.logout()\n    if (data.resultCode === 0) {\n        dispatch(setAuthUserData({id: null, email: null, login: '', isAuth: false}))\n    }\n}","export default __webpack_public_path__ + \"static/media/logo.73d85abf.svg\";","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport s from './Header.module.scss';\nimport logo from '../../assents/image/logo.svg'\n\ntype HeaderPropsType = {\n    isAuth: boolean\n    login: string\n    logoutMe: () => void\n}\n\nconst Header = (props: HeaderPropsType) => {\n    return (\n        <header className={s.header}>\n            <img\n                src={logo}/>\n            <div className={s.loginBlock}>\n                {props.isAuth\n                    ? <div>{props.login}-\n                        <button onClick={props.logoutMe}>Log out</button>\n                    </div>\n                    : <NavLink to={'/login'}>Login</NavLink>}\n            </div>\n        </header>\n    )\n}\nexport default Header;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {authDataType, authMe, logoutMe, setAuthUserData} from '../../redux/auth-reduser';\nimport {AppStoreType} from '../../redux/redux-store';\nimport Header from './Header';\n\ntype PropsType = {\n    isAuth: boolean\n    login: string\n    setAuthUserData: (data: authDataType) => void\n    authMe: () => void\n    logoutMe: () => void\n}\n\n\nclass HeaderContainer extends React.Component<PropsType> {\n    componentDidMount() {\n        this.props.authMe()\n    }\n\n    render() {\n        return <Header logoutMe={this.props.logoutMe} isAuth={this.props.isAuth} login={this.props.login}/>\n    }\n}\n\ntype mapStateToPropsType = {\n    isAuth: boolean\n    login: string\n}\n\nconst mapStateToProps = (state: AppStoreType): mapStateToPropsType => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login,\n})\n\n\nexport default connect(mapStateToProps, {setAuthUserData, authMe, logoutMe})(HeaderContainer);","import React from 'react';\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\nimport {maxLengthCreator, required} from '../../../utils/validators/validator';\nimport {Input} from '../../common/FormsControls/FormsControls';\nimport s from './LoginForm.module.scss';\nimport style from '../../common/FormsControls/FormsControls.module.scss'\n\n\nexport type LoginFormPropsType = {\n    email: string\n    password: string\n    rememberMe: boolean\n}\n\nconst maxLength30 = maxLengthCreator(30)\n\nconst LoginForm: React.FC<InjectedFormProps<LoginFormPropsType>> = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit} className={s.form}>\n            <div>\n                <Field placeholder={'email'} name={'email'} component={Input} validate={[required, maxLength30]}\n                       className={s.input}/>\n            </div>\n            <div>\n                <Field placeholder={'password'} type={'password'} name={'password'} component={Input}\n                       validate={[required, maxLength30]} className={s.input}/>\n            </div>\n            <div>\n                <Field type={'checkbox'} component={'input'} name={'rememberMe'} className={s.checkbox}/> remember me\n            </div>\n            {props.error && <div className={style.formSummaryError}>\n                {props.error}\n            </div>}\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\n\nconst ReduxLoginForm = reduxForm<LoginFormPropsType>({form: 'login'})(LoginForm)\nexport default ReduxLoginForm;","import React from 'react';\nimport {loginMe} from '../../redux/auth-reduser';\nimport ReduxLoginForm, {LoginFormPropsType} from './LoginForm/LoginForm';\nimport s from './LoginPage.module.scss';\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport {AppStoreType} from \"../../redux/redux-store\";\n\ntype LoginPagePropsType = {\n    loginMe: (formData: LoginFormPropsType) => void\n    isAuth: boolean\n}\n\nconst LoginPage = ({loginMe, isAuth}: LoginPagePropsType) => {\n\n    const onSubmit = (formData: LoginFormPropsType) => {\n        loginMe(formData)\n    }\n    if (isAuth) {\n        return <Redirect to={\"/profile\"}/>\n    }\n\n    return (\n        <div className={s.loginContainer}>\n            <h1>Login</h1>\n            <ReduxLoginForm onSubmit={onSubmit}/>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state: AppStoreType) => ({\n    isAuth: state.auth.isAuth\n})\nexport default connect(mapStateToProps, {loginMe})(LoginPage);","import React from 'react';\nimport withAuthRedirect from '../../hoc/withAuthRedirect';\nimport s from './Music.module.css';\n\n\nconst Music = () => {\n    return (\n\n       <div>\n         <button>+</button>\n       </div>\n  \n    )\n}\nexport default withAuthRedirect(Music);","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport s from './NavlinkForPage.module.scss';\n\ntype NavlinkPropsType = {\n    link: string\n    title: string\n}\n\nconst NavlinkForPage = ({link, title}: NavlinkPropsType) => {\n    return (\n        <div className={s.item}>\n            <NavLink to={link} activeClassName={s.active}>{title}</NavLink>\n        </div>\n    )\n}\nexport default NavlinkForPage;","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {AppStoreType} from '../../redux/redux-store';\nimport {UserType} from '../../redux/users-reducer';\nimport s from './Navbar.module.scss';\nimport NavlinkForPage from \"../common/NavlinkForPage/NavlinkForPage\";\n\n\nconst Navbar = () => {\n    const users = useSelector<AppStoreType, Array<UserType>>(state => state.usersPage.users)\n    return (\n        <nav className={s.nav}>\n            <div className={s.navContainer}>\n                <NavlinkForPage link={'/profile'} title={'Profile'}/>\n                <NavlinkForPage link={'/users'} title={'Users'}/>\n                <NavlinkForPage link={'/dialogs'} title={'Massages'}/>\n                <NavlinkForPage link={'/news'} title={'News'}/>\n                <NavlinkForPage link={'/music'} title={'Music'}/>\n                <NavlinkForPage link={'/setting'} title={'Settings'}/>\n            </div>\n        </nav>\n    )\n}\nexport default Navbar;","import React from 'react';\nimport {useDispatch} from \"react-redux\";\n\n\nconst News = () => {\n    const dispatch = useDispatch()\n    return (\n\n        <div>\n            News\n\n        </div>\n\n    )\n}\nexport default News;","import React from \"react\";\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validator\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\nimport s from './MyPost.module.scss';\n\nexport type TextareaPropsType = {\n    newPost: string\n}\n\nconst maxLength30 = maxLengthCreator(30)\n\nconst MyPostTextareaForm: React.FC<InjectedFormProps<TextareaPropsType>> = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit} className={s.form}>\n            <div>\n                <Field placeholder={'Add new post'} name={'newPost'} component={Textarea}\n                       validate={[required, maxLength30]}/>\n            </div>\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nexport const TextareaReduxForm = reduxForm<TextareaPropsType>({form: 'profileNewPostForm'})(MyPostTextareaForm)\n  ","export default __webpack_public_path__ + \"static/media/user.17df8b8c.png\";","import React from 'react';\nimport s from './Post.module.scss';\nimport userPhoto from \"../../../../assents/image/user.png\";\n\ntype Likes = {\n    like: number\n    massage: string\n}\n\nconst Post = (props: Likes) => {\n    return (\n        <div className={s.post}>\n            <div>\n                <img src={userPhoto}/>\n            </div>\n            <div className={s.massage}>\n                {props.massage}\n                <div className={s.like}>\n                    <span>♥</span>{props.like}\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Post;","import React from 'react';\nimport {postType} from '../../../types/types';\nimport s from './MyPost.module.scss';\nimport {TextareaPropsType, TextareaReduxForm} from './MyPostTextareaForm';\nimport Post from './Post/Post';\nimport userPhoto from \"../../../assents/image/user.png\";\n\ntype MyPostType = {\n    post: Array<postType>\n    newPostChange: (text: string) => void\n    addPost: (text: string) => void\n}\n\nconst MyPost = React.memo((props: MyPostType) => {\n    const postElements = props.post.map(p => <Post key={p.id} massage={p.message} like={p.numberLike}/>)\n    const onAddPost = ({newPost}: TextareaPropsType) => {\n        props.addPost(newPost)\n    }\n    return (\n        <div className={s.mypost}>\n            <div className={s.mypostContainer}>\n                <div>\n                    <img className={s.ava} src={userPhoto} />\n                </div>\n                <TextareaReduxForm onSubmit={onAddPost}/>\n            </div>\n            <div className={s.myPosts}>\n                <h3>My post</h3>\n                {postElements}\n            </div>\n        </div>\n\n    )\n})\n\nexport default MyPost;\n\n","export default __webpack_public_path__ + \"static/media/preloader.d564adc2.svg\";","import React from \"react\";\nimport preloader from \"../../../assents/image/preloader.svg\"\nimport s from \"./Preloader.module.css\"\n\n\nconst Preloader = () =>{\n    return <div className={s.preloaderContainer}><img src={preloader} className={s.preloader} /> </div>\n}\n\nexport default Preloader","import React, {ChangeEvent, useEffect, useState} from \"react\";\nimport s from './ProfileInfo.module.scss';\n\ntype ProfileStatusType = {\n    status: string\n    updateStatus: (status: string) => void\n}\n\ntype localStateType = {\n    editMode: boolean\n    status: string\n}\n\nconst ProfileStatusWithHooks = (props: ProfileStatusType) => {\n\n    const [status, setStatus] = useState<string>(props.status)\n\n    const [editMode, setEditMode] = useState<boolean>(false)\n\n    const activateEditMode = () => {\n        setEditMode(true)\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false)\n        props.updateStatus(status)\n    }\n\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\n        if (e.currentTarget.value) {\n            setStatus(e.currentTarget.value)\n        }\n    }\n    useEffect(() => {\n        setStatus(props.status)\n    }, [props.status])\n\n\n    return (\n        <div className={s.profileStatus}>\n            {!editMode\n                ?\n                <div className={s.statusText}>\n                    <span onDoubleClick={activateEditMode}>{props.status || '__________'}</span>\n                </div>\n                :\n                <div className={s.statusInput}>\n                    <input autoFocus onChange={onStatusChange} onBlur={deactivateEditMode} value={status}/>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default ProfileStatusWithHooks","import React from 'react';\nimport Preloader from '../../common/Preloader/Preloader';\nimport s from './ProfileInfo.module.scss';\nimport userPhoto from './../../../assents/image/user.png'\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\n\ntype ProfileInfoType = {\n    profile: any\n    status: string\n    updateStatus: (status: string) => void\n}\n\nconst ProfileInfo = ({profile, status, updateStatus}: ProfileInfoType) => {\n\n    if (!profile) {\n        return <Preloader/>\n    }\n    return (\n        <div className={s.PrfileInfo}>\n            <div className={s.PrfileInfoImg}>\n                <img className={s.ava} src={profile.photos.large || userPhoto}/>\n            </div>\n            <div className={s.discriptionInfo}>\n                <h5 className={s.name}>Vlad Klopot</h5>\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\n            </div>\n        </div>\n    )\n}\nexport default ProfileInfo;","import React from 'react';\nimport {postType} from '../../types/types';\nimport MyPost from './MyPost/MyPost';\nimport s from './Profile.module.scss';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\n\nexport type ProfileType = {\n    aboutMe: string\n    contacts: { facebook: string, website: string, vk: string, twitter: string, instagram: string }\n    fullName: string\n    lookingForAJob: boolean\n    lookingForAJobDescription: string\n    photos: { small: string, large: string }\n    userId: number\n}\n\ntype PostType = {\n    profile: ProfileType\n    post: Array<postType>\n    status: string\n    newPostChange: (text: string) => void\n    addPost: (text: string) => void\n    updateStatus: (status: string) => void\n}\n\nconst Profile = (props: PostType) => {\n\n    return (\n        <div className={s.profile}>\n            <div className={s.profileContainer}>\n                <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n                <MyPost\n                    post={props.post}\n                    newPostChange={props.newPostChange}\n                    addPost={props.addPost}\n                />\n            </div>\n        </div>\n    )\n}\nexport default Profile;","import {profileAPI, usersAPI} from \"../api/api\";\nimport {ActionType, DispatchType, postType} from \"../types/types\"\n\n\nexport type postPageType = {\n    postData: Array<postType>\n    profile: any\n    status: string\n}\n\nconst InitialState: postPageType = {\n    postData: [\n        {id: 1, message: 'Today I go to the cinema', numberLike: 12},\n        {id: 2, message: 'Haw are you?', numberLike: 20},\n        {id: 3, message: \"It's my firs post!\", numberLike: 100}\n    ],\n    profile: null,\n    status: '',\n}\n\nexport const profileReducer = (state: postPageType = InitialState, action: ActionType): postPageType => {\n    switch (action.type) {\n        case 'ADD-POST': {\n            const newPostAddData: postType = {\n                id: 5,\n                message: action.newPostAdd,\n                numberLike: 0\n            };\n            return {\n                ...state,\n                postData: [...state.postData, newPostAddData],\n\n            }\n        }\n        case \"DELETE-POST\":\n            return {\n                ...state,\n                postData: [...state.postData.filter(p => p.id !== action.id && p)]\n            }\n        case 'SET-USER-PROFILE':\n            return {...state, profile: action.profile}\n\n        case 'SET-STATUS':\n            return {...state, status: action.status}\n\n        default:\n            return state;\n    }\n}\n\nexport const addPost = (newPostAdd: string) => {\n    return {\n        type: 'ADD-POST',\n        newPostAdd: newPostAdd\n    } as const\n}\n\nexport const deletePost = (id: number) => {\n    return {\n        type: 'DELETE-POST',\n        id\n    } as const\n}\n\nexport const setUsersProfile = (profile: any) => {\n    return {\n        type: 'SET-USER-PROFILE',\n        profile\n    } as const\n}\n\nexport const setStatus = (status: string) => {\n    return {\n        type: 'SET-STATUS',\n        status\n    } as const\n}\n\n\nexport const getUserProfile = (userID: string) => async (dispatch: DispatchType) => {\n    const data = await usersAPI.getProfile(userID)\n    dispatch(setUsersProfile(data))\n}\n\nexport const getStatus = (userID: string) => async (dispatch: DispatchType) => {\n    const response = await profileAPI.getStatus(userID)\n    dispatch(setStatus(response.data))\n\n}\n\nexport const updateStatus = (status: string) => async (dispatch: DispatchType) => {\n    const response = await profileAPI.updateStatus(status)\n    if (response.data.resultCode === 0) {\n        dispatch(setStatus(status))\n    }\n}\n\n","import {connect} from 'react-redux';\nimport React from \"react\"\nimport {AppStoreType} from '../../redux/redux-store';\nimport Profile, {ProfileType} from './Profile';\nimport {addPost, setUsersProfile, getUserProfile, getStatus, updateStatus} from '../../redux/profile-reducer';\nimport {postType} from \"../../types/types\";\nimport {RouteComponentProps, withRouter} from \"react-router\";\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\ntype PathParamsType = {\n    userID: string\n}\n\ntype MapStateToPropsType = {\n    profile: any\n    post: postType[]\n    status: string\n    userID: number | null\n}\n\ntype MapDispachToPropsType = {\n    addPost: (text: string) => void\n    newPostChange: (text: string) => void\n    setUsersProfile: (profile: ProfileType) => void\n    getUserProfile: (userId: string) => void\n    getStatus: (status: string) => void\n    updateStatus: (status: string) => void\n}\n\ntype ProfileContainerType = MapStateToPropsType & MapDispachToPropsType\ntype PropsType = RouteComponentProps<PathParamsType> & ProfileContainerType\n\nclass ProfileContainer extends React.Component<PropsType> {\n    componentDidMount() {\n\n        let userID = this.props.match.params.userID\n        if (!userID) {\n            userID = String(this.props.userID)\n        }\n        this.props.getUserProfile(userID)\n        this.props.getStatus(userID)\n    }\n\n    render() {\n        return (\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status}\n                     updateStatus={this.props.updateStatus}/>\n        )\n    }\n}\n\nconst mapStateToProps = (state: AppStoreType): MapStateToPropsType => {\n    return {\n        profile: state.postPage.profile,\n        status: state.postPage.status,\n        post: state.postPage.postData,\n        userID: state.auth.id,\n    }\n}\n\nexport default compose<React.ComponentType>(\n    withAuthRedirect,\n    connect(mapStateToProps, {addPost, setUsersProfile, getUserProfile, getStatus, updateStatus}),\n    withRouter,\n)\n(ProfileContainer)","import React from 'react';\nimport s from './Setting.module.css';\n\n\nconst Setting = () => {\n    return (\n\n       <div>\n         Setting\n       </div>\n  \n    )\n}\nexport default Setting;","export const updateObjectInArray = <T>(items: Array<any>, itemId: number, objPropName: any, newObjProps: any) => {\n    return items.map(f => {\n        if (f[objPropName] === itemId) {\n            return {...f, ...newObjProps}\n        }\n        return f\n    })\n}","import {usersAPI} from \"../api/api\";\nimport {DispatchType} from \"../types/types\";\nimport {updateObjectInArray} from \"../utils/helper/objects-helpers\";\n\nexport type ActionType =\n    toggleIsFollowingProgessActionType |\n    ToggleIsFetchingActionType |\n    SetTotalUsersCountActionType |\n    SetCurrentPageActionType |\n    SetFriendsActionType |\n    UnFollowUserActionType |\n    FollowUserActionType\nexport type toggleIsFollowingProgessActionType = ReturnType<typeof toggleIsFollowingProgess>\nexport type ToggleIsFetchingActionType = ReturnType<typeof toggleIsFetching>;\nexport type SetTotalUsersCountActionType = ReturnType<typeof setTotalUsersCount>;\nexport type SetCurrentPageActionType = ReturnType<typeof setCurrentPage>;\nexport type SetFriendsActionType = ReturnType<typeof setUsers>;\nexport type UnFollowUserActionType = ReturnType<typeof unFollowSuccess>;\nexport type FollowUserActionType = ReturnType<typeof followSuccess>;\n\nexport type usersPageType = {\n    users: Array<UserType>\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    followingInProgress: Array<number>\n}\nexport type UserType = {\n    id: number\n    followed: boolean\n    status?: string\n    location?: {\n        city: string\n        country: string\n    }\n    name: string\n    ava: string\n}\nconst InitialState: usersPageType = {\n    users: [],\n    pageSize: 30,\n    totalUsersCount: 200,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: []\n}\n\nexport const usersReducer = (state: usersPageType = InitialState, action: ActionType): usersPageType => {\n    switch (action.type) {\n        case 'FOLLOW-USER': {\n            return {\n                ...state,\n                users: updateObjectInArray<UserType>(state.users, action.usersID, 'id', {followed: true})\n            }\n        }\n        case 'UNFOLLOW-USER': {\n            return {\n                ...state,\n                users: updateObjectInArray<UserType>(state.users, action.usersID, 'id', {followed: false})\n            }\n        }\n        case 'SET-USERS': {\n            return {\n                ...state,\n                users: action.user\n            }\n        }\n        case 'SET-CURRENT-PAGE': {\n            return {\n                ...state,\n                currentPage: action.currentPage\n            }\n        }\n        case 'SET-TOTAL-USERS-COUNT': {\n            return {\n                ...state,\n                totalUsersCount: action.totalUsersCount\n            }\n        }\n        case 'TOGGLE-IS-FETCHING': {\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        }\n        case 'TOGGLE-IS-FOLLOWING-PROGRESS': {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userID]\n                    : state.followingInProgress.filter(id => id !== action.userID)\n            }\n        }\n        default:\n            return state;\n    }\n}\n\nexport const followSuccess = (usersID: number) => {\n    return {\n        type: 'FOLLOW-USER',\n        usersID\n\n    } as const\n}\nexport const unFollowSuccess = (usersID: number) => {\n    return {\n        type: 'UNFOLLOW-USER',\n        usersID\n    } as const\n}\n\nexport const setUsers = (user: Array<UserType>) => {\n    return {\n        type: 'SET-USERS',\n        user\n    } as const\n}\n\nexport const setCurrentPage = (currentPage: number) => {\n    return {\n        type: 'SET-CURRENT-PAGE',\n        currentPage\n    } as const\n}\n\nexport const setTotalUsersCount = (totalUsersCount: number) => {\n    return {\n        type: 'SET-TOTAL-USERS-COUNT',\n        totalUsersCount\n    } as const\n}\n\nexport const toggleIsFetching = (isFetching: boolean) => {\n    return {\n        type: 'TOGGLE-IS-FETCHING',\n        isFetching\n    } as const\n}\n\nexport const toggleIsFollowingProgess = (isFetching: boolean, userID: number) => {\n    return {\n        type: 'TOGGLE-IS-FOLLOWING-PROGRESS',\n        isFetching, userID\n    } as const\n}\n\nexport const requestUsers = (currentPage: number, pageSize: number) => async (dispatch: DispatchType) => {\n    dispatch(toggleIsFetching(true))\n    dispatch(setCurrentPage(currentPage))\n    const data = await usersAPI.getUsers(currentPage, pageSize)\n    dispatch(toggleIsFetching(false))\n    dispatch(setUsers(data.items))\n    dispatch(setTotalUsersCount(data.totalCount))\n}\n\nconst followUnfollowFlow = async (dispatch: DispatchType, id: number, apiMethod: any, actionCreate: any) => {\n    dispatch(toggleIsFollowingProgess(true, id))\n    const data = await apiMethod(id)\n    if (data.resultCode === 0) {\n        dispatch(actionCreate(id))\n    }\n    dispatch(toggleIsFollowingProgess(false, id))\n}\n\nexport const follow = (id: number) => async (dispatch: DispatchType) => {\n    const apiMethod = usersAPI.followToUser.bind(id)\n    const actionCreate = followSuccess\n    followUnfollowFlow(dispatch, id, apiMethod, actionCreate)\n}\n\nexport const unFollow = (id: number) => async (dispatch: DispatchType) => {\n    const apiMethod = usersAPI.unFollowToUser.bind(id)\n    const actionCreate = unFollowSuccess\n    followUnfollowFlow(dispatch, id, apiMethod, actionCreate)\n}\n","import React, { ButtonHTMLAttributes, DetailedHTMLProps } from \"react\";\nimport s from './Button.module.scss'\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\n\ntype ButtonPropsType = DefaultButtonPropsType & {\n    title?: string\n    onClick?: () => void\n    disabled?: boolean\n\n}\n\nconst Button = ({ title, onClick, ...props }: ButtonPropsType) => {\n    const finalClassName = `${s.button} ${props.className}`\n    return <button onClick={onClick} className={finalClassName} disabled={props.disabled}>{title}</button>\n}\n\nexport default Button","import React from \"react\";\nimport s from './User.module.scss';\nimport userPhoto from './../../../assents/image/user.png'\nimport { NavLink } from \"react-router-dom\";\nimport { UserType } from \"../../../redux/users-reducer\";\nimport Button from \"../../common/Button/Button\";\n\n\ntype UserPagePropsType = {\n    user: UserType\n    followingInProgress: Array<number>\n    follow: (id: number) => void\n    unFollow: (id: number) => void\n}\n\nconst User = ({ user, ...props }: UserPagePropsType) => {\n    return (\n        <div className={s.userPage}>\n            <div className={s.avaButton}>\n                <div className={s.avaDiv}>\n                    <NavLink to={'/profile/' + user.id}>\n                        <img src={user.ava ? user.ava : userPhoto} className={s.ava} />\n                    </NavLink>\n                </div>\n                <div className={s.buttonDiv}>\n                    {\n                        user.followed ?\n                            <Button className={s.userButton} onClick={() => props.unFollow(user.id)} title={'Unfollow'} disabled={props.followingInProgress.some(id => id === user.id)} />\n                            :\n                            <Button className={s.userButton} onClick={() => props.follow(user.id)} title={'Follow'} disabled={props.followingInProgress.some(id => id === user.id)} />\n                    }\n                </div>\n            </div>\n            <div className={s.info}>\n                <div className={s.NameStatus}>\n                    <h4 className={s.name}>{user.name}</h4>\n                    <p className={s.userInfo}>status: {user.status  || 'Hello'}</p>\n                </div>\n                <div className={s.location}>\n                    <p className={s.userInfo}>country:{user.location?.country}</p>\n                    <p className={s.userInfo}>city:{user.location?.city}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default User","import React, {useState} from \"react\";\nimport s from './Paginator.module.scss';\nimport Button from \"../Button/Button\";\n\ntype PaginatorPropsType = {\n    totalUsersCount: number\n    pageSize: number\n    currentPage: number\n    onPageChange: (p: number) => void\n    portionSize: number\n}\n\nconst Paginator = React.memo(({\n                                  totalUsersCount,\n                                  pageSize,\n                                  currentPage,\n                                  onPageChange,\n                                  portionSize\n                              }: PaginatorPropsType) => {\n\n\n    const pagesCount = Math.ceil(totalUsersCount / pageSize)\n    const pages = []\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i)\n    }\n\n    const portionCount = Math.ceil(pagesCount / portionSize)\n    const [portionNumber, setPortionNumber] = useState<number>(1)\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\n    const rightPortionPageNumber = portionNumber * portionSize\n\n    return (\n        <div className={s.pageNumber}>\n            {portionNumber > 1 &&\n                <Button title={\"prev\"} onClick={() => setPortionNumber(portionNumber - 1)}/>\n            }\n            {pages\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n                .map(p => <span key={p}\n                                className={currentPage === p ? s.selectedPage : s.notselectpage}\n                                onClick={() => onPageChange(p)}>{p}</span>\n                )}\n            {portionCount - portionNumber > 1 &&\n                <Button title={\"next\"} onClick={() => setPortionNumber(portionNumber + 1)}/>\n            }\n        </div>\n    )\n})\n\nexport default Paginator","import React from \"react\";\nimport s from './Users.module.scss';\nimport {UserType} from \"../../redux/users-reducer\";\nimport User from \"./User/User\";\nimport Paginator from \"../common/Paginator/Paginator\";\n\ntype UsersPageTypeProps = {\n    totalUsersCount: number\n    pageSize: number\n    currentPage: number\n    followingInProgress: Array<number>\n    onPageChange: (p: number) => void\n    unFollowSuccess: (id: number) => void\n    followSuccess: (id: number) => void\n    follow: (id: number) => void\n    unFollow: (id: number) => void\n    users: Array<UserType>\n}\n\nconst Users = React.memo(({totalUsersCount, pageSize, currentPage, onPageChange, ...props}: UsersPageTypeProps) => {\n    return (\n        <div className={s.users}>\n            <Paginator totalUsersCount={totalUsersCount} pageSize={pageSize} currentPage={currentPage}\n                       onPageChange={onPageChange} portionSize={20}/>\n\n            {\n                props.users.map(u => <User key={u.id} user={u} follow={props.follow} unFollow={props.unFollow}\n                                           followingInProgress={props.followingInProgress}/>)\n            }\n        </div>\n    )\n})\n\nexport default Users","import {createSelector} from \"reselect\";\nimport {AppStoreType} from \"./redux-store\";\n\nexport const getUsersSelector = (state: AppStoreType) => {\n    return state.usersPage.users\n}\n\nexport const getUsers = createSelector(getUsersSelector, (users) => {\n    return users.filter(u => true)\n})\n\nexport const getPageSize = (state: AppStoreType) => {\n    return state.usersPage.pageSize\n}\n\nexport const getTotalUsersCount = (state: AppStoreType) => {\n    return state.usersPage.totalUsersCount\n}\n\nexport const getCurrentPage = (state: AppStoreType) => {\n    return state.usersPage.currentPage\n}\n\nexport const getIsFetching = (state: AppStoreType) => {\n    return state.usersPage.isFetching\n}\n\nexport const getFollowingInProgress = (state: AppStoreType) => {\n    return state.usersPage.followingInProgress\n}\n\n","import {connect} from 'react-redux';\nimport {AppStoreType} from '../../redux/redux-store';\nimport {\n    followSuccess,\n    unFollowSuccess,\n    setCurrentPage,\n    UserType,\n    follow,\n    unFollow,\n    requestUsers\n} from '../../redux/users-reducer';\nimport React from \"react\";\nimport Users from \"./Users\";\nimport Preloader from '../common/Preloader/Preloader';\nimport {compose} from 'redux';\nimport {\n    getCurrentPage,\n    getFollowingInProgress,\n    getIsFetching,\n    getPageSize,\n    getTotalUsersCount, getUsers\n} from \"../../redux/users-selectors\";\n\ntype UsersPageType = {\n    users: Array<UserType>\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    followingInProgress: Array<number>\n    followSuccess: (friendsID: number) => void\n    unFollowSuccess: (friendsID: number) => void\n    setCurrentPage: (currentPage: number) => void\n    requestUsers: (currentPage: number, pageSize: number) => void\n    follow: (id: number) => void\n    unFollow: (id: number) => void\n}\n\nclass UsersContainer extends React.Component<UsersPageType> {\n    componentDidMount() {\n        const {currentPage, pageSize} = this.props\n        this.props.requestUsers(currentPage, pageSize)\n    }\n\n    onPageChange = (pageNumber: number) => {\n        const {pageSize} = this.props\n        this.props.requestUsers(pageNumber, pageSize)\n    }\n\n\n    render() {\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            < Users\n                totalUsersCount={this.props.totalUsersCount}\n                pageSize={this.props.pageSize}\n                currentPage={this.props.currentPage}\n                onPageChange={this.onPageChange}\n                unFollowSuccess={this.props.unFollowSuccess}\n                followSuccess={this.props.followSuccess}\n                users={this.props.users}\n                followingInProgress={this.props.followingInProgress}\n                follow={this.props.follow}\n                unFollow={this.props.unFollow}\n            />\n        </>\n    }\n}\n\nconst mapStateToProps = (state: AppStoreType) => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state)\n    }\n}\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, {followSuccess, unFollowSuccess, setCurrentPage, follow, unFollow, requestUsers}))\n(UsersContainer)\n\n","import {ActionType} from \"../types/types\";\nimport {authMe} from \"./auth-reduser\";\n\nexport type appDataType = {\n    initializet: boolean\n}\n\n\nconst InitialState: appDataType = {\n    initializet: false,\n}\n\nexport const appReducer = (state: appDataType = InitialState, action: ActionType): appDataType => {\n\n    switch (action.type) {\n        case 'INITIALIZET-SUCCESS': {\n            return {\n                ...state,\n                initializet: true\n\n            }\n        }\n        default:\n            return state;\n\n    }\n}\n\nexport const initializetSuccess = () => {\n    return {\n        type: 'INITIALIZET-SUCCESS',\n    } as const\n}\n\n\nexport const initializeApp = () => (dispatch: any) => {\n    let promise = dispatch(authMe())\n    Promise.all([promise]).then(() => dispatch(initializetSuccess()))\n}","import React from 'react';\nimport {Route} from 'react-router-dom';\nimport {compose} from 'redux';\nimport './App.css';\nimport DialogsContainer from './Components/Dialogs/DialogsContainer';\nimport HeaderContainer from './Components/Header/HeaderContainer';\nimport LoginPage from './Components/Login/LoginPage';\nimport Music from './Components/Music/Music';\nimport Navbar from './Components/Navbar/Navbar';\nimport News from './Components/News/News';\nimport ProfileContainer from './Components/Profile/ProfileContainer';\nimport Setting from './Components/Setting/Setting';\nimport UsersContainer from './Components/Users/UsersContainer';\nimport {AppStoreType} from './redux/redux-store';\nimport {connect} from \"react-redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./Components/common/Preloader/Preloader\";\n\n\ntype AppType = {\n    // store: AppStoreType\n    //store: Store<any, ActionType>\n    store: any,\n    initializeApp: () => void\n    initializet: boolean\n}\n\nclass App extends React.Component<AppType> {\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if (!this.props.initializet) {\n            return <Preloader/>\n        }\n\n        return (\n\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Route path='/profile/:userID?' render={() => <ProfileContainer/>}/>\n                    <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                    <Route path='/news' render={() => <News/>}/>\n                    <Route path='/music' render={() => <Music/>}/>\n                    <Route path='/setting' render={() => <Setting/>}/>\n                    <Route path='/users' render={() => <UsersContainer/>}/>\n                    <Route path='/login' render={() => <LoginPage/>}/>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state: AppStoreType) => ({\n    initializet: state.app.initializet\n})\n\nexport default compose(\n    connect(mapStateToProps, {initializeApp})(App)\n);\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {dialogsReduser} from './dialogs-reduser';\nimport {profileReducer} from './profile-reducer';\nimport {applyMiddleware, combineReducers, compose, createStore} from 'redux';\nimport {usersReducer} from './users-reducer';\nimport {authReducer} from './auth-reduser';\nimport thunkMiddleware from 'redux-thunk';\nimport {reducer as formReducer} from 'redux-form'\nimport {appReducer} from './app-reducer';\n\nconst reducers = combineReducers({\n    postPage: profileReducer,\n    messagePage: dialogsReduser,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer\n})\n\n//@ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst reduxStore = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\nexport type AppStoreType = ReturnType<typeof reducers>\n\n//@ts-ignore\nwindow.__store__ = reduxStore\n// const reduxStore = createStore(reducers, applyMiddleware(thunkMiddleware));\n\nexport default reduxStore","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport reduxStore from './redux/redux-store';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={reduxStore}>\n                <App store={reduxStore}/>\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n// let state = useSelector<AppStoreType, Array<stateType>>(s=>state)\n// const subscribeRenderEntireTree = () => renderEntireTree(reduxStore.getState())\n// reduxStore.subscribe(subscribeRenderEntireTree)\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(); \n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PrfileInfo\":\"ProfileInfo_PrfileInfo__3tEmj\",\"PrfileInfoImg\":\"ProfileInfo_PrfileInfoImg__10neJ\",\"ava\":\"ProfileInfo_ava__arQX6\",\"discriptionInfo\":\"ProfileInfo_discriptionInfo__ZtD8k\",\"name\":\"ProfileInfo_name__10GhZ\",\"profileStatus\":\"ProfileInfo_profileStatus__2A15U\",\"statusText\":\"ProfileInfo_statusText__1GbtM\",\"statusInput\":\"ProfileInfo_statusInput__2bsQm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mypost\":\"MyPost_mypost__3sDTz\",\"mypostContainer\":\"MyPost_mypostContainer__2-bdk\",\"ava\":\"MyPost_ava__3OT6u\",\"form\":\"MyPost_form__26x3X\",\"myPosts\":\"MyPost_myPosts__2lsYr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormsControls_error__25lZQ\",\"formSummaryError\":\"FormsControls_formSummaryError__3SArY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginForm_form__3zkcS\",\"input\":\"LoginForm_input__A4twx\",\"checkbox\":\"LoginForm_checkbox__3o0GS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3xkcK\",\"massage\":\"Post_massage__3-F9C\",\"like\":\"Post_like__zUo2a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageNumber\":\"Paginator_pageNumber__3UFLY\",\"selectedPage\":\"Paginator_selectedPage__2VvUS\",\"notselectpage\":\"Paginator_notselectpage__1YS2_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MytextMesage\":\"Message_MytextMesage__25ENL\",\"YoutextMesage\":\"Message_YoutextMesage__2wXAD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__yfRMG\",\"loginBlock\":\"Header_loginBlock__2TtaP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1pZty\",\"navContainer\":\"Navbar_navContainer__3lypU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"NavlinkForPage_item__1QzgZ\",\"active\":\"NavlinkForPage_active__2SybX\"};"],"sourceRoot":""}